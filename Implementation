#include <iostream>
#include <queue>

using namespace std;


struct Node {
    char data;
    Node *left;
    Node *right;
};

void LevelOrder(Node *root){
 if(root == NULL)
        return;
    queue<Node*> Q;
    Q.push(root);

    while(!Q.empty()) {
        Node* current = Q.front();
        cout<<current->data<<" ";
        if(current->left != NULL)
            Q.push(current->left);
        if(current->right != NULL)
            Q.push(current->right);
        Q.pop();
    }
}

Node* Insert(Node *root, char data){
    if(root == NULL){
        root = new Node();
        root->data = data;
        root->left = root->right = NULL;
    }
    else if(data <= root->data)
        root->left = Insert(root->left, data);
    else
        root->right = Insert(root->right, data);
    return root;
}

int main()
{
    /*Code To Test the logic
	  Creating an example tree
              F
            /   \
           D     J
          / \   / \
         B   E G   K
        / \     \
       A   C     I
                /
               H
    */

    Node* root = NULL;
    root = Insert(root,'F'); root = Insert(root,'D');
	root = Insert(root,'J'); root = Insert(root,'B');
	root = Insert(root,'E'); root = Insert(root,'G');
	root = Insert(root,'K'); root = Insert(root,'A');
	root = Insert(root,'C'); root = Insert(root,'I');
	root = Insert(root,'H');

	//Print Nodes in level order
	LevelOrder(root);
}
